///////////////////////////////////////////////////////////////////////////////
//                                                                           //
// File name : Image2D.cxx
//
// Creation : 2010/05/19
//
// Version : 2010/05/19
//
// Author : Jacques-Olivier Lachaud
//
// email : lachaud@labri.fr
//
// Purpose : ??
//
// Distribution :
//
// Use :
//	??
//
// Todo :
//	O ??
//
// History :
//	2010/05/19 : Mr ?Name? : ?What?
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//                                                                           //


///////////////////////////////////////////////////////////////////////////////
#include <cmath>
#include "ImaGene/image/Image2D.h"
// Includes inline functions/methods if necessary.
#if !defined(INLINE)
#include "ImaGene/image/Image2D.ih"
#endif
///////////////////////////////////////////////////////////////////////////////

using namespace std;

const char* const Image2D_RCS_ID = "@(#)class Image2D definition.";



///////////////////////////////////////////////////////////////////////////////
// class Image2D
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
// Standard services - public :

bool
ImaGene::checkImage2D()
{
  uint8 val = 17;
  Image2D<uint8> I( 100, 100, val );
  Pixel p = I.lowest();
  Pixel q = I.highest();
  double average = 0.0;
  for ( Pixel z = p; z.y < q.y; z.y++ )
    for ( z.x = p.x; z.x < q.x; z.x++ )
      average += (double) I.at( z );
  average /= I.size();
  return ((uint8) round( average ) == val );
}

///////////////////////////////////////////////////////////////////////////////
// Interface - public :



///////////////////////////////////////////////////////////////////////////////
// Internals - private :

//                                                                           //
///////////////////////////////////////////////////////////////////////////////
