//////////////////////////////////////////////////////////////////////////////
//                                                                          //
// File name : DigitalSurface.ih
//
// Creation : 2003/07/08
//
// Version : 2003/07/08
//
// Author : JOL
//
// Summary : Implementation of inline methods defined in DigitalSurface.h 
//
// History :
//	2003/07/08 : ?Name? : ?What?
//
// Rcs Id : "@(#)class DigitalSurface declaration."
//                                                                           //
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
#include <iostream>
//////////////////////////////////////////////////////////////////////////////

#if defined(NO_DEBUG)
#define ASSERT_DigitalSurface(x)
#define DEBUGCMD_DigitalSurface(x)
#else //defined(NO_DEBUG)
#define ASSERT_DigitalSurface(x) if(!(x)) \
    { std::cerr << "Assertion failed : (" << #x << ')' << std::endl \
    << "In file : " << __FILE__ << " at line #" << __LINE__ << std::endl \
    << "Compiled the " << __DATE__ << " at " << __TIME__ << std::endl; abort();}
#define DEBUGCMD_DigitalSurface(x) x
#endif // else defined(NO_DEBUG)


namespace ImaGene {

///////////////////////////////////////////////////////////////////////////////
// Implementation of inline methods                                          //

  /** 
   * Destructor. Does nothing.
   */
  DigitalSurface::~DigitalSurface()
  {}



///////////////////////////////////////////////////////////////////////////////
// Implementation of inline functions and external operators                 //

/**
 * Overloads 'operator<<' for displaying objects of class 'DigitalSurface'.
 * @param that_stream the output stream where the object is written.
 * @param that_object_to_display the object of class 'DigitalSurface' to write.
 * @return the output stream after the writing.
 */
std::ostream&
operator<<( std::ostream & that_stream, const DigitalSurface & that_object_to_display )
{
  that_object_to_display.selfDisplay( that_stream );
  return that_stream;
}

//                                                                           //
///////////////////////////////////////////////////////////////////////////////

} // namespace ImaGene
